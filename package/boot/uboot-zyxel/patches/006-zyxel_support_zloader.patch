--- a/net/tftp.c
+++ b/net/tftp.c
@@ -487,6 +487,13 @@ TftpHandler (uchar * pkt, unsigned dest,
 static void
 TftpTimeout (void)
 {
+#ifdef CONFIG_ZYXEL_ZLOADER
+	char *nretry;
+	nretry = getenv("netretry");
+	if (nretry && (!strcmp(nretry, "no"))) {
+		TftpTimeoutCount = TftpTimeoutCountMax;
+	}
+#endif
 	if (++TftpTimeoutCount > TftpTimeoutCountMax) {
 		puts ("\nRetry count exceeded; starting again\n");
 #ifdef CONFIG_MCAST_TFTP
--- a/common/cmd_bootm.c
+++ b/common/cmd_bootm.c
@@ -421,6 +421,7 @@ static int bootm_load_os(image_info_t os
 		return BOOTM_ERR_OVERLAP;
 	}
 
+    flush_cache(load, *load_end-load);
 	return 0;
 }
 
--- a/common/exports.c
+++ b/common/exports.c
@@ -46,4 +46,55 @@ void jumptable_init (void)
 	gd->jt[XF_spi_release_bus] = (void *) spi_release_bus;
 	gd->jt[XF_spi_xfer] = (void *) spi_xfer;
 #endif
+#ifdef CONFIG_ZYXEL_ZLOADER
+#define SETUP_JUMP_TBL(x)	gd->jt[XF_ ##x ] = (void *) x
+	SETUP_JUMP_TBL(memcmp);
+	SETUP_JUMP_TBL(memset);
+	SETUP_JUMP_TBL(memcpy);
+    SETUP_JUMP_TBL(strcpy);
+#if defined(CONFIG_CMD_NET)
+	SETUP_JUMP_TBL(do_tftpb);
+	SETUP_JUMP_TBL(eth_init);
+	SETUP_JUMP_TBL(eth_rx);
+	SETUP_JUMP_TBL(eth_halt);
+	SETUP_JUMP_TBL(NetSetHandler);
+#endif
+#ifdef CONFIG_ZYXEL_MULTIBOOT
+	SETUP_JUMP_TBL(NetPacketInit);
+	SETUP_JUMP_TBL(getNetBootFileXferSize);
+  #ifdef CONFIG_LZMA
+	SETUP_JUMP_TBL(lzmaBuffToBuffDecompress);
+  #endif
+#endif
+#ifdef CONFIG_NET_MULTI
+	SETUP_JUMP_TBL(eth_set_current);
+#endif
+	SETUP_JUMP_TBL(strlen);
+	SETUP_JUMP_TBL(strncmp);
+	SETUP_JUMP_TBL(sprintf);
+	SETUP_JUMP_TBL(do_bootm);
+	SETUP_JUMP_TBL(readline);
+	SETUP_JUMP_TBL(get_user_command_buffer);
+    SETUP_JUMP_TBL(zflash_init);
+    SETUP_JUMP_TBL(zflash_read);
+    SETUP_JUMP_TBL(zflash_write);
+    SETUP_JUMP_TBL(zflash_erase);
+#ifdef CONFIG_CMD_NAND
+    SETUP_JUMP_TBL(znand_init);
+    SETUP_JUMP_TBL(znand_read);
+    SETUP_JUMP_TBL(znand_write);
+    SETUP_JUMP_TBL(znand_erase);
+#endif
+    SETUP_JUMP_TBL(saveenv);
+    SETUP_JUMP_TBL(do_run);
+    SETUP_JUMP_TBL(do_reset);
+    SETUP_JUMP_TBL(flush_cache);
+    SETUP_JUMP_TBL(image_check_hcrc);
+    SETUP_JUMP_TBL(image_check_dcrc);
+    SETUP_JUMP_TBL(clear_ctrlc);
+    SETUP_JUMP_TBL(configure_pio);
+    SETUP_JUMP_TBL(set_pio);
+    SETUP_JUMP_TBL(get_pio);
+    SETUP_JUMP_TBL(max_pio_num);
+#endif /* #ifdef CONFIG_ZYXEL_ZLOADER */
 }
--- a/common/main.c
+++ b/common/main.c
@@ -40,7 +40,7 @@
 
 #include <post.h>
 
-#if defined(CONFIG_SILENT_CONSOLE) || defined(CONFIG_POST) || defined(CONFIG_CMDLINE_EDITING)
+#if defined(CONFIG_SILENT_CONSOLE) || defined(CONFIG_POST) || defined(CONFIG_CMDLINE_EDITING) || defined(CONFIG_ZYXEL_ZLOADER)
 DECLARE_GLOBAL_DATA_PTR;
 #endif
 
@@ -270,6 +270,32 @@ static __inline__ int abortboot(int boot
 #endif	/* CONFIG_BOOTDELAY >= 0  */
 
 /****************************************************************************/
+#ifdef CONFIG_ZYXEL_ZLOADER
+void fake_sys_halt(void)
+{
+    int i=0;
+    char passwd[]={'q','u','i','t'}, ch;
+    ulong timer;
+    puts("Reset your board! system halt...");
+    timer=get_timer(0);
+    do {
+        if ( tstc() ) {
+            ch=getc();
+            if (ch==passwd[i]) {
+                i++;
+                timer=get_timer(0);
+            } else {
+                i=0;
+            }
+        }
+        if ( get_timer(timer)>160 /*ms*/ ) {
+            i=0;
+            timer = get_timer(0);
+        }
+    } while (i<sizeof(passwd));
+    putc('\n');
+}
+#endif
 
 void main_loop (void)
 {
@@ -436,6 +462,23 @@ void main_loop (void)
 	}
 #endif
 
+#ifdef CONFIG_ZYXEL_ZLOADER
+  #include <zgpio.h>
+    gd->flags |= GD_FLG_DISABLE_CONSOLE;
+	/* load & boot zloader */
+ #ifdef CONFIG_ZFLASH_CMD
+    zflash_init();
+ #endif
+    setenv("boot_zld", CONFIG_BOOT_ZLOADER_CMD);
+    if ( run_command("run boot_zld", 0) == -1 ) {
+        gd->flags &= (~GD_FLG_DISABLE_CONSOLE);
+        printf("\n!!!!! fail to boot zloader !!!!!\n");
+        /* should not return here */
+        ZLOADER_EXEC_FAILED_LED_INDICATE;
+        fake_sys_halt();
+    }
+#endif
+
 	/*
 	 * Main Loop for Monitor Command Processing
 	 */
@@ -1329,8 +1372,11 @@ int run_command (const char *cmd, int fl
 #ifdef DEBUG_PARSER
 	printf ("[PROCESS_SEPARATORS] %s\n", cmd);
 #endif
+#ifdef CONFIG_ZYXEL_ZLOADER
+	while (*str && rc==0) {
+#else
 	while (*str) {
-
+#endif
 		/*
 		 * Find separator, or string end
 		 * Allow simple escape of ';' by writing "\;"
@@ -1446,3 +1492,10 @@ int do_run (cmd_tbl_t * cmdtp, int flag,
 	return 0;
 }
 #endif
+
+#ifdef CONFIG_ZYXEL_ZLOADER
+char  *get_user_command_buffer(void)
+{
+	return &console_buffer[0];
+}
+#endif
--- a/include/_exports.h
+++ b/include/_exports.h
@@ -30,3 +30,42 @@ EXPORT_FUNC(spi_free_slave)
 EXPORT_FUNC(spi_claim_bus)
 EXPORT_FUNC(spi_release_bus)
 EXPORT_FUNC(spi_xfer)
+// add for ZyXEL zloader/multiboot
+EXPORT_FUNC(memcmp)
+EXPORT_FUNC(memset)
+EXPORT_FUNC(memcpy)
+EXPORT_FUNC(strcpy)
+EXPORT_FUNC(do_tftpb)
+EXPORT_FUNC(eth_init)
+EXPORT_FUNC(eth_halt)
+EXPORT_FUNC(eth_rx)
+EXPORT_FUNC(eth_set_current)
+EXPORT_FUNC(NetSetHandler)
+EXPORT_FUNC(getNetBootFileXferSize)
+EXPORT_FUNC(NetPacketInit)
+EXPORT_FUNC(lzmaBuffToBuffDecompress)
+EXPORT_FUNC(strlen)
+EXPORT_FUNC(strncmp)
+EXPORT_FUNC(sprintf)
+EXPORT_FUNC(do_bootm)
+EXPORT_FUNC(readline)
+EXPORT_FUNC(get_user_command_buffer)
+EXPORT_FUNC(zflash_init)
+EXPORT_FUNC(zflash_read)
+EXPORT_FUNC(zflash_write)
+EXPORT_FUNC(zflash_erase)
+EXPORT_FUNC(znand_init)
+EXPORT_FUNC(znand_read)
+EXPORT_FUNC(znand_write)
+EXPORT_FUNC(znand_erase)
+EXPORT_FUNC(saveenv)
+EXPORT_FUNC(do_run)
+EXPORT_FUNC(flush_cache)
+EXPORT_FUNC(image_check_hcrc)
+EXPORT_FUNC(image_check_dcrc)
+EXPORT_FUNC(clear_ctrlc)
+EXPORT_FUNC(configure_pio)
+EXPORT_FUNC(set_pio)
+EXPORT_FUNC(get_pio)
+EXPORT_FUNC(max_pio_num)
+
--- a/include/exports.h
+++ b/include/exports.h
@@ -19,13 +19,14 @@ void free(void*);
 void udelay(unsigned long);
 unsigned long get_timer(unsigned long);
 void vprintf(const char *, va_list);
-void do_reset (void);
+//void do_reset (void);
 unsigned long simple_strtoul(const char *cp,char **endp,unsigned int base);
 char *getenv (char *name);
 int setenv (char *varname, char *varvalue);
 long simple_strtol(const char *cp,char **endp,unsigned int base);
 int strcmp(const char * cs,const char * ct);
 int ustrtoul(const char *cp, char **endp, unsigned int base);
+int saveenv(void);
 #ifdef CONFIG_HAS_UID
 void forceenv (char *varname, char *varvalue);
 #endif
@@ -34,6 +35,23 @@ int i2c_write (uchar, uint, int , uchar*
 int i2c_read (uchar, uint, int , uchar* , int);
 #endif
 #include <spi.h>
+// for zloader & multiboot
+#include <net.h>
+#include <command.h>
+#include <zflash.h>
+#include <zgpio.h>
+int lzmaBuffToBuffDecompress (unsigned char *outStream, size_t *uncompressedSize,
+			      unsigned char *inStream, size_t length);
+ulong getNetBootFileXferSize(void);
+volatile uchar *getNetTxPacketAddr(void);
+int setNetRxPacketsAddr(int num, volatile uchar *address);
+int readline (const char *const prompt);
+char *get_user_command_buffer(void);
+int do_run (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[]);
+int do_reset(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+int do_tftpb (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+int do_bootm (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+void flush_cache(ulong start_addr, ulong size);
 
 void app_startup(char **);
 
@@ -47,7 +65,7 @@ enum {
 	XF_MAX
 };
 
-#define XF_VERSION	6
+#define XF_VERSION	1
 
 #if defined(CONFIG_I386)
 extern gd_t *global_data;
--- a/include/net.h
+++ b/include/net.h
@@ -404,6 +404,9 @@ struct _VALID_BUFFER_STRUCT_
 };
 #endif
 
+/* Initialize the network buffer for tx/rx */
+extern int NetPacketInit(void);
+
 /* Initialize the network adapter */
 extern int	NetLoop(proto_t);
 
--- a/net/net.c
+++ b/net/net.c
@@ -310,29 +310,9 @@ NetInitLoop(proto_t protocol)
 	return;
 }
 
-/**********************************************************************/
-/*
- *	Main network processing loop.
- */
-
 int
-NetLoop(proto_t protocol)
+NetPacketInit(void)
 {
-	bd_t *bd = gd->bd;
-
-#ifdef CONFIG_NET_MULTI
-	NetRestarted = 0;
-	NetDevExists = 0;
-#endif
-
-	/* XXX problem with bss workaround */
-	NetArpWaitPacketMAC = NULL;
-	NetArpWaitTxPacket = NULL;
-	NetArpWaitPacketIP = 0;
-	NetArpWaitReplyIP = 0;
-	NetArpWaitTxPacket = NULL;
-	NetTryCount = 1;
-
 #if defined(CONFIG_RT2880_ETH)
 	if (!NetTxPacket) {
 		int     i;
@@ -371,6 +351,34 @@ NetLoop(proto_t protocol)
 	}
 #endif
 
+	return 0;
+}
+
+/**********************************************************************/
+/*
+ *	Main network processing loop.
+ */
+
+int
+NetLoop(proto_t protocol)
+{
+	bd_t *bd = gd->bd;
+
+#ifdef CONFIG_NET_MULTI
+	NetRestarted = 0;
+	NetDevExists = 0;
+#endif
+
+	/* XXX problem with bss workaround */
+	NetArpWaitPacketMAC = NULL;
+	NetArpWaitTxPacket = NULL;
+	NetArpWaitPacketIP = 0;
+	NetArpWaitReplyIP = 0;
+	NetArpWaitTxPacket = NULL;
+	NetTryCount = 1;
+
+	NetPacketInit();
+
 	if (!NetArpWaitTxPacket) {
 		NetArpWaitTxPacket = &NetArpWaitPacketBuf[0] + (PKTALIGN - 1);
 		NetArpWaitTxPacket -= (ulong)NetArpWaitTxPacket % PKTALIGN;
@@ -1593,6 +1601,16 @@ NetReceive(volatile uchar * inpkt, int l
 		}
 		/* If it is not for us, ignore it */
 		tmp = NetReadIP(&ip->ip_dst);
+#ifdef CONFIG_ZYXEL_MULTIBOOT
+		//printf("tmp=%08lX(%08lX)\n", tmp, htonl(tmp));
+		if (tmp == htonl(0xe1000000) && packetHandler != NULL){
+			(*packetHandler)((uchar *)ip +IP_HDR_SIZE,
+					ntohs(ip->udp_dst),
+					ntohs(ip->udp_src),
+					ntohs(ip->udp_len) - 8);
+			return;
+		}
+#endif
 		if (NetOurIP && tmp != NetOurIP && tmp != 0xFFFFFFFF) {
 #ifdef CONFIG_MCAST_TFTP
 			if (Mcast_addr != tmp)
@@ -1998,3 +2016,11 @@ ushort getenv_VLAN(char *var)
 {
 	return (string_to_VLAN(getenv(var)));
 }
+
+#ifdef CONFIG_ZYXEL_ZLOADER
+ulong getNetBootFileXferSize(void)
+{
+	return (NetBootFileXferSize);
+}
+#endif
+
