--- a/fs/jffs2/mini_inflate.c
+++ b/fs/jffs2/mini_inflate.c
@@ -30,7 +30,7 @@
 static unsigned char huffman_order[] = {16, 17, 18,  0,  8,  7,  9,  6, 10,  5,
 					11,  4, 12,  3, 13,  2, 14,  1, 15};
 
-inline void cramfs_memset(int *s, const int c, size n)
+static inline void cramfs_memset(int *s, const int c, size n)
 {
 	n--;
 	for (;n > 0; n--) s[n] = c;
@@ -79,7 +79,7 @@ static void init_stream(struct bitstream
 /* pull 'bits' bits out of the stream. The last bit pulled it returned as the
  * msb. (section 3.1.1)
  */
-inline unsigned long pull_bits(struct bitstream *stream,
+static inline unsigned long pull_bits(struct bitstream *stream,
 			       const unsigned int bits)
 {
 	unsigned long ret;
@@ -99,7 +99,7 @@ inline unsigned long pull_bits(struct bi
 	return ret;
 }
 
-inline int pull_bit(struct bitstream *stream)
+static inline int pull_bit(struct bitstream *stream)
 {
 	int ret = ((*(stream->data) >> stream->bit) & 1);
 	if (stream->bit++ == 7) {
--- a/include/image.h
+++ b/include/image.h
@@ -34,6 +34,10 @@
 #define __IMAGE_H__
 
 #include "compiler.h"
+#include <asm/byteorder.h>
+
+/* Define this to avoid #ifdefs later on */
+struct lmb;
 
 #ifdef USE_HOSTCC
 
@@ -546,9 +550,9 @@ static inline int image_check_target_arc
 #define FIT_MAX_HASH_LEN	20	/* max(crc32_len(4), sha1_len(20)) */
 
 /* cmdline argument format parsing */
-inline int fit_parse_conf (const char *spec, ulong addr_curr,
+int fit_parse_conf (const char *spec, ulong addr_curr,
 		ulong *addr, const char **conf_name);
-inline int fit_parse_subimage (const char *spec, ulong addr_curr,
+int fit_parse_subimage (const char *spec, ulong addr_curr,
 		ulong *addr, const char **image_name);
 
 void fit_print_contents (const void *fit);
